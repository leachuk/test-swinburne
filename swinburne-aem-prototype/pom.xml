<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <!-- ====================================================================== -->
  <!-- P A R E N T    P R O J E C T    D E S C R I P T I O N                  -->
  <!-- ====================================================================== -->
  <parent>
      <groupId>edu.au.swinburne.aem</groupId>
      <artifactId>swinburne-parent</artifactId>
      <version>0.1-SNAPSHOT</version>
      <relativePath>../pom.xml</relativePath>
  </parent>

  <!-- ====================================================================== -->
  <!-- P R O J E C T    D E S C R I P T I O N                                 -->
  <!-- ====================================================================== -->

  <groupId>edu.au.swinburne.aem</groupId>
  <artifactId>swinburne-aem-prototype</artifactId>
  <packaging>content-package</packaging>
  <name>swinburne :: swinburne :: parent :: aem-prototype</name>
  <description>Style Guide for Swinburne project</description>
  <version>0.1-SNAPSHOT</version>

  <properties>
    <sonar.sources>source,pom.xml</sonar.sources>
    <!--<sonar.skip>true</sonar.skip>-->
    <nodeVersion>v8.15.0</nodeVersion>
    <npmVersion>6.4.1</npmVersion>
    <yarnVersion>v1.13.0</yarnVersion>
  </properties>

  <developers>
    <developer>
      <email>max@aem.design</email>
      <name>Max Barrass</name>
    </developer>
    <developer>
      <email>chris.shaw@isobar.com</email>
      <name>Chris Shaw</name>
    </developer>
  </developers>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>com.github.eirslett</groupId>
        <artifactId>frontend-maven-plugin</artifactId>
        <version>LATEST_VERSION</version>
        <scope>provided</scope>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <profiles>
    <profile>
      <id>autoInstallPackage</id>
      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.day.jcr.vault</groupId>
            <artifactId>content-package-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>install-content-package</id>
                <phase>install</phase>
                <goals>
                  <goal>install</goal>
                </goals>
                <configuration>
                  <targetURL>${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>
                  <userId>${crx.username}</userId>
                  <password>${crx.password}</password>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <profile>
      <id>deploymentpackage</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
        </plugins>
      </build>
    </profile>

    <!-- Swinburne University of Technology (SUT) -->
    <profile>
      <id>buildSwinburneGlobal</id>

      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.6</version>

            <configuration>
              <nodeVersion>${nodeVersion}</nodeVersion>
              <npmVersion>${npmVersion}</npmVersion>
              <yarnVersion>${yarnVersion}</yarnVersion>
            </configuration>

            <executions>
              <execution>
                <id>install node and yarn</id>

                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>

                <configuration>
                  <nodeVersion>${nodeVersion}</nodeVersion>
                  <yarnVersion>${yarnVersion}</yarnVersion>
                </configuration>
              </execution>

              <execution>
                <id>exec-yarn-install-sut</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>

              <execution>
                <id>exec-aem-build-sut</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments>${package.npmCommand} --env.clientLibsFolder=${package.clientLibsFolder} --env.project=sut --env.maven --env.clean</arguments>
                </configuration>
              </execution>

              <execution>
                <id>exec-aem-generate-tags-sut</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments> - -stack_size=8192</arguments>
                  <arguments>run aem:generatetags --no-clean --no-console --config=sut.yml</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>

            <!-- ensure that the empty directories are copied -->
            <configuration>
              <includeEmptyDirs>true</includeEmptyDirs>
            </configuration>

            <executions>
              <execution>
                <id>copy-css-vault-resources-sut</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/sut/css</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/sut/css</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-image-vault-resources-sut</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/sut/images</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/sut/images</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-fonts-vault-resources-sut</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/sut/fonts</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/sut/fonts</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-js-vault-resources-sut</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/sut/js</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/sut/js</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>

    <!-- Swinburne University of Technology (Microsites) -->
    <profile>
      <id>buildSwinburneMicrosites</id>

      <activation>
        <activeByDefault>false</activeByDefault>
      </activation>

      <build>
        <plugins>
          <plugin>
            <groupId>com.github.eirslett</groupId>
            <artifactId>frontend-maven-plugin</artifactId>
            <version>1.6</version>

            <configuration>
              <nodeVersion>${nodeVersion}</nodeVersion>
              <npmVersion>${npmVersion}</npmVersion>
              <yarnVersion>${yarnVersion}</yarnVersion>
            </configuration>

            <executions>
              <execution>
                <id>install node and yarn</id>

                <goals>
                  <goal>install-node-and-yarn</goal>
                </goals>

                <configuration>
                  <nodeVersion>${nodeVersion}</nodeVersion>
                  <yarnVersion>${yarnVersion}</yarnVersion>
                </configuration>
              </execution>

              <execution>
                <id>exec-yarn-install-microsites</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments>install</arguments>
                </configuration>
              </execution>

              <execution>
                <id>exec-aem-build-swinburne-microsites</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments>${package.npmCommand} --env.clientLibsFolder=${package.clientLibsFolder} --env.project=microsites --env.maven --env.clean</arguments>
                </configuration>
              </execution>

              <execution>
                <id>exec-aem-generate-tags-microsites</id>

                <goals>
                  <goal>yarn</goal>
                </goals>

                <configuration>
                  <arguments> - -stack_size=8192</arguments>
                  <arguments>run aem:generatetags --no-clean --no-console --config=microsites.yml</arguments>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>

            <!-- ensure that the empty directories are copied -->
            <configuration>
              <includeEmptyDirs>true</includeEmptyDirs>
            </configuration>

            <executions>
              <execution>
                <id>copy-css-vault-resources-microsites</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/microsites/css</outputDirectory>
                  <resources>
                    <resource>
                      <directory>public/microsites/css</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-css-vault-resources-forms-microsites</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/microsites/forms/default/css</outputDirectory>
                  <resources>
                    <resource>
                      <directory>public/microsites/css</directory>
                      <includes>
                        <include>theme.css</include>
                      </includes>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-image-vault-resources-microsites</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/microsites/images</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/microsites/images</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-fonts-vault-resources-microsites</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/microsites/fonts</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/microsites/fonts</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>

              <execution>
                <id>copy-js-vault-resources-microsites</id>
                <phase>generate-resources</phase>

                <goals>
                  <goal>copy-resources</goal>
                </goals>

                <configuration>
                  <outputDirectory>${basedir}/target/classes/etc/clientlibs/swinburne/microsites/js</outputDirectory>

                  <resources>
                    <resource>
                      <directory>public/microsites/js</directory>
                    </resource>
                  </resources>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <groupId>org.apache.maven.plugins</groupId>

        <configuration>
          <includeEmptyDirs>true</includeEmptyDirs>
        </configuration>

        <executions>
          <execution>
            <id>copy-metainf-vault-resources</id>
            <phase>generate-resources</phase>

            <goals>
              <goal>copy-resources</goal>
            </goals>

            <configuration>
              <outputDirectory>${basedir}/target/vault-work/META-INF</outputDirectory>

              <resources>
                <resource>
                  <directory>.maven/content/META-INF</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>

          <execution>
            <id>copy-content-generator-content-resources</id>
            <phase>generate-resources</phase>

            <goals>
              <goal>copy-resources</goal>
            </goals>

            <configuration>
              <outputDirectory>${basedir}/target/classes/</outputDirectory>

              <resources>
                <resource>
                  <directory>content-generator/content</directory>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <artifactId>content-package-maven-plugin</artifactId>
        <groupId>com.day.jcr.vault</groupId>
        <extensions>true</extensions>

        <configuration>
          <filterSource>.maven/content/META-INF/vault/filter.xml</filterSource>
          <group>${package.group}</group>
          <targetURL>${package.uploadProtocol}://${crx.host}:${crx.port}/crx/packmgr/service.jsp</targetURL>

          <properties>
            <acHandling>merge_preserve</acHandling>
            <created>${buildNumber}</created>
            <createdBy>${package.createdBy}</createdBy>
            <description>${project.description}</description>
          </properties>
        </configuration>
      </plugin>
    </plugins>
  </build>
</project>
