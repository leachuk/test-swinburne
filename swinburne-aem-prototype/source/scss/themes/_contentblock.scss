&--contentblock {
  &-hero {
    background-size: cover;
    background-position: center;
    position: relative;
    z-index: 1;

    &::before {
      background-color: rgba($black, .5);
      bottom: 0;
      content: '';
      left: 0;
      right: 0;
      top: 0;
      position: absolute;
      z-index: -1;
    }
  }

  // Alert panel
  &-alert {
    padding-bottom: rem-calc(30px);
    padding-top: rem-calc(30px);
    text-align: center;

    > :last-child {
      margin-top: rem-calc(30px);
    }

    > :not(p):not(.text) {
      margin-left: rem-calc(30px);
      margin-right: rem-calc(30px);
    }

    > .text {
      padding-left: rem-calc(10px);
      padding-right: rem-calc(10px);
    }

    &::before {
      $icon-size: rem-calc(50px);
      @include pseudo-icon('hazard', $icon-size, $needs-margin: false);

      align-items: center;
      color: theme-color('c1');
      display: inline-flex;
      line-height: $icon-size;
      margin: 0 auto get-spacer(15);
    }
  }

  // Pull quote
  &-pull-quote {
    text-align: center;

    .tags {
      justify-content: center;
    }

    blockquote::before {
      color: theme-color('c3');
    }
  }

  // Collapsable content
  &-collapse {
    button[data-toggle='collapse'][data-target] {
      @include typography-level('headings', 'h5');

      margin-bottom: get-spacer(15);
      text-transform: none !important;

      &::before {
        background-color: theme-color('c2');
        border-radius: 100%;
        content: '';
        height: 10px;
        margin-right: rem-calc(20px);
        width: 10px;
      }

      &::after {
        color: theme-color('c6');
        content: get-icon('chevron-down') !important;
      }

      &[aria-expanded='true']::after {
        transform: rotate(180deg);
      }

      @include plain-hover-focus {
        color: theme-color('g1');
        text-decoration: none;
      }

      @include hover-focus {
        &:not([aria-expanded='true'])::after {
          transform: none;
        }
      }
    }

    .collapse[data-parent] > .body,
    .collapsing[data-parent] > .body {
      @include make-container;

      border-bottom: 1px solid theme-color('c2');
      border-top: 1px solid theme-color('c2');
      margin-bottom: get-spacer(15);
      padding-bottom: map-get($spacers, 30);
      padding-top: map-get($spacers, 30);
    }
  }

  // Search + Filtering
  &-search {
    align-items: center;
    display: flex;
    flex-direction: column;

    > div {
      margin-bottom: rem-calc(35px);
      max-width: 268px;
      width: 100%;
    }

    // Ensure the form is relative so we can position children within it correctly
    .search.quick form {
      position: relative;
    }

    input[type='text'] {
      border-width: 0;
      border-bottom: 2px solid currentColor;
      color: theme-color('g1');
      font-size: rem-calc(18px);
      padding: rem-calc(2px) rem-calc(40px) rem-calc(2px) rem-calc(10px);
      width: 100%;
    }

    form > button[type='submit'] {
      appearance: none;
      background-color: transparent;
      border-width: 0;
      padding: 0;
      position: absolute;
      right: rem-calc(6px);
      top: rem-calc(4px);

      .icon {
        display: block;
      }
    }

    @include media-breakpoint-up(md) {
      align-items: flex-start;
      flex-direction: row;
      justify-content: center;

      > div {
        margin-bottom: 0;

        + div {
          margin-left: rem-calc(58px);
        }
      }
    }
  }

  // Horizontal split (line)
  &-split::before {
    background-color: theme-color('c3');
    content: '';
    display: block;
    height: 2px;
    margin-left: auto;
    margin-right: auto;
    width: 100px;
  }

  // Constraints
  &-constrain {
    @each $breakpoint in map-keys($grid-breakpoints) {
      @include media-breakpoint-up($breakpoint) {
        $infix: breakpoint-infix($breakpoint, $grid-breakpoints);

        @for $size from 1 through $grid-columns {
          &#{$infix}-#{$size} {
            max-width: percentage($size / $grid-columns);
          }
        }
      }
    }
  }
}
