// PLEASE NOTE!!
//
// These styles directly affect AEM components, they should not introduce any new
// behaviour that can be handled already by Bootstrap helper classes such as spacing
// and other component level changes.

/* stylelint-disable declaration-no-important */

.text {
  @include clearfix;

  &:not(.text-heading-outlined) {
    // Headings keyline (underline)
    h1,
    h2,
    h3,
    h4,
    .h1,
    .h2,
    .h3,
    .h4 {
      &::after {
        background-color: $primary;
        content: '';
        display: block;
        height: 1px;
        margin-top: 20px;
        width: 80px;

        @include media-breakpoint-up(lg) {
          margin-top: 30px;
        }
      }
    }

    // Apply a different keyline margin depending on the heading level
    @each $level in h1, h2, h3, h4 {
      @each $bp, $opts in typography-heading($level) {
        @if map-has-key($opts, margin-bottom) {
          @include media-breakpoint-up($bp) {
            #{$level}::after,
            .#{$level}::after {
              margin-top: map-get($opts, margin-bottom);
            }
          }
        }
      }
    }

    // H4 headings have a slightly smaller keyline under them on larger screens
    h4::after,
    .h4::after {
      @include media-breakpoint-up(lg) {
        width: 60px;
      }
    }
  }
}

.title,
.text[component] {
  // ol, ul {
  //   padding-bottom: 0;
  //   padding-left: $spacing-md;
  // }

  // ul {
  //   list-style: none;
  //   li {
  //     position: relative;
  //     font-size: 14pt;
  //     &:before {
  //       content: "â€¢";
  //       display: block;
  //       position: absolute;
  //       color: $primary;
  //       top: 0;
  //       left: 0;
  //       margin: 0 0 0 -20px;
  //       font-size: 24px;
  //     }
  //   }
  // }
  // ol {
  //   counter-reset: item;
  //   list-style: none;
  //   padding-left: 0;
  //   li {
  //     &:before {
  //       content: counter(item) ". ";
  //       counter-increment: item;
  //       color: $primary;
  //     }
  //   }
  // }

  &.text-list-dark {
    ul, ol {
      li::before {
        color: $grey-3;
      }
    }
  }

  // .row li {
  //   line-height: 1.2;
  //   padding-bottom: .5em;
  // }
}

.text-shadow {
  &.text[component] > *,
  & {
    text-shadow: 5px 5px 10px rgba($black, .5);
  }
}

.text-uppercase {
  &,
  * {
    text-transform: uppercase !important;
  }
}

small,
.text-xsmall {
  &,
  * {
    font-size: 10pt !important;
    font-weight: 400;
    line-height: 23pt;

    @include media-breakpoint-up(md) {
      font-size: 12pt !important;
    }
  }
}

.text-bold {
  &,
  * {
    font-weight: 700;
  }
}

.text-red {
  &,
  * {
    color: $primary !important;
  }
}

.text-black {
  &,
  * {
    color: $tertiary !important;
  }
}

.text-white {
  &,
  * {
    color: $white !important;
  }
}

$colors: (
  red          : $primary,      // 1
  yellow       : $secondary,    // 2
  charcoal     : $tertiary,     // 3
  green        : $color-4,      // 4
  blue         : $color-5,      // 5
  purple       : $color-6,      // 6
  turquoise    : $color-7,      // 7
  red-50       : $primary-50,   // 8
  yellow-50    : $secondary-50, // 9
  green-50     : $color-4-50,   // 10
  blue-50      : $color-5-50,   // 11
  purple-50    : $color-6-50,   // 12
  turquoise-50 : $color-7-50,   // 13
  grey-1       : $grey-2,       // 14
  grey-2       : $grey-3,       // 15
  grey-3       : $grey-4,       // 16
  grey-4       : $grey-5,       // 17
  grey-5       : $grey-6        // 18
);

@each $name, $color in $colors {
  $index: index($colors, $color);
  .text-#{$name} {
    color: #{$color} !important;
  }
}

/* stylelint-enable declaration-no-important */
