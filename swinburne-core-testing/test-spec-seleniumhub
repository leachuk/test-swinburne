#!/bin/bash

#################################
# DECLARATION
#################################

POM_FILE="../pom.xml"
SCRIPT_PARAMS="$@"

source "../scripts/functions.sh"

EXEC_AEM_HOST="${1:-$AEM_HOST}"
EXEC_AEM_PORT="${2:-$AEM_PORT}"
DEFAULT_HUB_URL="${3:-$SELENIUMHUB_SCHEME://$SELENIUMHUB_HOST:$SELENIUMHUB_PORT$SELENIUMHUB_SERVICE}"
DEFAULT_PARAMS=""${@:4}""

DEFAULT_IMAGE="aemdesign/centos-java-buildpack"
DEFAULT_COMMAND="cd swinburne-core-testing && ./test-spec"
DEFAULT_REPORT_PATH="generated-docs/summary.html"
DEFAULT_OPEN_REPORT="true"
DEFAULT_DRIVERS_EXEC="remote-seleniumhub-chrome "

echo ""
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Usage:"
echo ""
echo " ./test-spec-seleniumhub <1.EXEC_AEM_HOST> <2.EXEC_AEM_PORT> <3.DEFAULT_HUB_URL> <4.DEFAULT_PARAMS>"
echo ""
echo "ARGUMENTS:"
echo "  1.EXEC_AEM_HOST: $EXEC_AEM_HOST"
echo "  2.EXEC_AEM_PORT: $EXEC_AEM_PORT"
echo "  3.DEFAULT_HUB_URL: $DEFAULT_HUB_URL"
echo "  4.DEFAULT_PARAMS: $DEFAULT_PARAMS"
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""

#################################
# FUNCTIONS
#################################


function runTest() {
    local DRIVER=$1
    local COMMAND="$DEFAULT_COMMAND $EXEC_AEM_HOST $EXEC_AEM_PORT $DRIVER $DEFAULT_HUB_URL $DEFAULT_PARAMS"
    echo "COMMAND: $COMMAND"

    local CONTAINER_EXIST=$($DOCKER ps -q -f name=$DRIVER)

    #check if container exist
    if [ ! "$($DOCKER ps -q -f name=$DRIVER)" ]; then
        if [ "$($DOCKER ps -aq -f status=exited -f name=$DRIVER)" ]; then
            # cleanup
            echo " - CONTAINER FINISHED REMOVING: $DRIVER"
            $DOCKER rm $DRIVER
        fi
        echo " - RUNNING CONTAINER: $DRIVER"

		local PROJECT_ROOT_DIR="$(pwd)/.."
		local MAVEN_DIR="$(realpath ~/.m2)"
		
		if [[ "$OS" == "windows" ]]; then
		
			PROJECT_ROOT_DIR=$(fixPath "$PROJECT_ROOT_DIR")			
			MAVEN_DIR="$(fixPath "$MAVEN_DIR")"
			
        elif [[ "$OS" == "windowsbash" ]]; then
            MAVEN_DIR="/mnt/c/Users/$USER/.m2"
            PROJECT_ROOT_DIR="$(cd .. && pwd)"

			PROJECT_ROOT_DIR=$(fixPath "$PROJECT_ROOT_DIR")
			MAVEN_DIR="$(fixPath "$MAVEN_DIR")"
		fi

        echo PROJECT_ROOT_DIR: $PROJECT_ROOT_DIR
        echo MAVEN_DIR: $MAVEN_DIR

		echo $DOCKER run -d --name $DRIVER -v $PROJECT_ROOT_DIR:/build -v $MAVEN_DIR:/root/.m2 $DEFAULT_IMAGE /bin/sh -c "$COMMAND"

		#exit 1
		
        START=$($DOCKER run -d --name $DRIVER -v $PROJECT_ROOT_DIR:/build -v $MAVEN_DIR:/root/.m2 $DEFAULT_IMAGE /bin/sh -c "$COMMAND")
    else
        echo " - CONTAINER ALREADY RUNNING: $DRIVER"
    fi

}


function runTests() {
    declare -a DRIVERS_EXEC=($@)

    DRIVERS_EXEC_LENGTH=${#DRIVERS_EXEC[@]}

    for (( i=1; i<${DRIVERS_EXEC_LENGTH}+1; i++ ));
    do
        ITEM_VALUE=${DRIVERS_EXEC[$i-1]}
        echo "STARTING CONTAINER: [$i/${DRIVERS_EXEC_LENGTH}] $ITEM_VALUE"
        runTest "$ITEM_VALUE"
    done
}

function monitorTests() {

    declare -a OPEN_REPORTS=($@)

    OPEN_REPORTS_LENGTH=${#OPEN_REPORTS[@]}


    echo ""
    echo "-----------------------------------------------------------------"
    echo ""
    echo "MONITORING CONTAINERS"
    echo " - AUTO OPEN RESULTS: $DEFAULT_OPEN_REPORT"
    echo ""
    echo "================================================================="
    echo ""

    $DOCKER logs -f $@ > dockerlogs/docker-log-stdout-$(date +%s).log &
    $DOCKER logs -f $@
    echo Stopping: $@
    $DOCKER stop $@
    echo Removing: $@
    $DOCKER rm $@
}

function testServer() {

    local ADDRESS="$@"

    local RESULT="$($CURL -L --write-out %{http_code} --silent --output /dev/null ${ADDRESS} | $GREP -q "000" && echo false || echo true)"

    echo $RESULT

}


#################################
# MAIN LOGIC
#################################

DEFAULT_HUB_AVAIABLE=$(testServer $DEFAULT_HUB_URL)
AEM_AVAILABLE=$(testServer http://$EXEC_AEM_HOST:$EXEC_AEM_PORT)

echo "AEM AT $EXEC_AEM_HOST:$EXEC_AEM_PORT IS AVAILABLE: $AEM_AVAILABLE"

if [[ "true" == "$DEFAULT_HUB_AVAIABLE" && "true" == "$AEM_AVAILABLE" ]]; then
    echo "SELENIUM HUB IS AVAILABLE at $DEFAULT_HUB_URL AND AEM at $AEM_AVAILABLE"

    runTests $DEFAULT_DRIVERS_EXEC
    #runTest "remote-seleniumhub-chrome"
    #runTest "remote-seleniumhub-firefox"

    monitorTests $DEFAULT_DRIVERS_EXEC

else
    echo "SELENIUM HUB OR AEM NOT AVAILABLE at $DEFAULT_HUB_URL"
    exit 1 #indicate error with non zero return
fi
