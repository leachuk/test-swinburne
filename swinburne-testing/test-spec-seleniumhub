#!/bin/bash

#################################
# DECLARATION
#################################

POM_FILE="../pom.xml"
SCRIPT_PARAMS="$@"

source "../scripts/functions.sh"

CURL=$(/usr/bin/which curl)
GREP=$(/usr/bin/which grep)

EXEC_HOST="${1:-$AEM_HOST}"
DEFAULT_HUB_URL="${2:-$SELENIUMHUB_SCHEME://$SELENIUMHUB_HOST:$SELENIUMHUB_PORT$SELENIUMHUB_SERVICE}"
DEFAULT_PARAMS=""${@:3}""

DEFAULT_IMAGE="aemdesign/centos-java-buildpack"
DEFAULT_COMMAND="cd swinburne-testing && ./test-spec"
DEFAULT_REPORT_PATH="generated-docs/summary.html"
DEFAULT_OPEN_REPORT="true"
DEFAULT_DRIVERS_EXEC="remote-seleniumhub-chrome "

echo ""
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo "Usage:"
echo ""
echo " ./test-spec-seleniumhub <EXEC_HOST> <SELENIUM HUB ADDRESS> <MAVEN PARAMS>"
echo ""
echo "~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~"
echo ""

#################################
# FUNCTIONS
#################################


function runTest() {
    local DRIVER=$1
    local COMMAND="$DEFAULT_COMMAND $EXEC_HOST $DRIVER $DEFAULT_HUB_URL $DEFAULT_PARAMS"

    local CONTAINER_EXIST=$(docker ps -q -f name=$DRIVER)

    #check if container exist
    if [ ! "$(docker ps -q -f name=$DRIVER)" ]; then
        if [ "$(docker ps -aq -f status=exited -f name=$DRIVER)" ]; then
            # cleanup
            echo " - CONTAINER FINISHED REMOVING: $DRIVER"
            docker rm $DRIVER
        fi
        echo " - RUNNING CONTAINER: $DRIVER"
        START=$(docker run -d --rm --name $DRIVER -v $(pwd)/..:/build -v ~/.m2:/root/.m2 $DEFAULT_IMAGE /bin/sh -c "$COMMAND")
    else
        echo " - CONTAINER ALREADY RUNNING: $DRIVER"
    fi

}


function runTests() {
    declare -a DRIVERS_EXEC=($@)

    DRIVERS_EXEC_LENGTH=${#DRIVERS_EXEC[@]}

    for (( i=1; i<${DRIVERS_EXEC_LENGTH}+1; i++ ));
    do
        ITEM_VALUE=${DRIVERS_EXEC[$i-1]}
        echo "STARTING CONTAINER: [$i/${DRIVERS_EXEC_LENGTH}] $ITEM_VALUE"
        runTest "$ITEM_VALUE"
    done
}

function monitorTests() {

    declare -a OPEN_REPORTS=($@)

    OPEN_REPORTS_LENGTH=${#OPEN_REPORTS[@]}


    echo ""
    echo "-----------------------------------------------------------------"
    echo ""
    echo "MONITORING CONTAINERS"
    echo " - AUTO OPEN RESULTS: $DEFAULT_OPEN_REPORT"
    echo ""
    echo "================================================================="
    echo ""

    docker logs -f $@ > docker-log-stdout-$(date +%s).log &
    docker logs -f $@
    docker stop $@
    docker rm $@
}

function testHub() {

    local ADDRESS="$DEFAULT_HUB_URL"

    local RESULT="$($CURL -L --write-out %{http_code} --silent --output /dev/null ${ADDRESS} | $GREP -q "000" && echo false || echo true)"

    echo $RESULT

}


#################################
# MAIN LOGIC
#################################

DEFAULT_HUB_AVAIABLE=$(testHub)

if [[ "true" == "$DEFAULT_HUB_AVAIABLE" ]]; then
    echo "SELENIUM HUB IS AVAILABLE at $DEFAULT_HUB_URL"

    runTests $DEFAULT_DRIVERS_EXEC
    #runTest "remote-seleniumhub-chrome"
    #runTest "remote-seleniumhub-firefox"

    monitorTests $DEFAULT_DRIVERS_EXEC
else
    echo "SELENIUM HUB NOT AVAILABLE at $DEFAULT_HUB_URL"
fi
